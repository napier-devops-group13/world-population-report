# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [master, develop, "release/**"]
  pull_request:
    branches: [master, develop]
  workflow_dispatch:

# cancel older runs of the same ref to save minutes
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  MAVEN_OPTS: -Xmx1g -XX:+TieredCompilation -XX:TieredStopAtLevel=1

jobs:
  # --- Build & Test on JDK 24 with a real MySQL backing service (unit + ITs) ---
  build-java24:
    name: Build + Tests (JDK 24, shaded JAR, MySQL ITs)
    runs-on: ubuntu-latest
    timeout-minutes: 25

    services:
      mysql:
        image: mysql:8.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: world
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=12

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Temurin JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: maven

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Wait for MySQL healthy
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          for i in {1..60}; do
            mysqladmin ping -h 127.0.0.1 -P "$MYSQL_PORT" -uroot -proot --silent && break
            sleep 2
          done

      - name: Seed database with world dataset
        if: ${{ hashFiles('db/init/01-world.sql') != '' }}
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          mysql -h 127.0.0.1 -P "$MYSQL_PORT" -uroot -proot world < db/init/01-world.sql

      - name: Maven verify (unit + integration tests)
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_NAME: world
          DB_USER: root
          DB_PASS: root
        run: mvn -B -ntp -DskipITs=false clean verify

      - name: Upload shaded JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
          if-no-files-found: error
          retention-days: 7

      - name: Upload test reports (Surefire & Failsafe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            target/surefire-reports/**
            target/failsafe-reports/**
          if-no-files-found: warn
          retention-days: 7

  # --- Coverage job on LTS JDK (nice for examiners & stability) ---
  coverage-java21:
    name: Coverage (JDK 21, JaCoCo)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Temurin JDK 21 (LTS)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Run tests + JaCoCo report
        run: mvn -B -ntp -Denforcer.skip=true test jacoco:report

      - name: Upload JaCoCo HTML report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/**
          if-no-files-found: error
          retention-days: 7

  # --- Docker build to validate Dockerfile (meets rubric: "build using JAR and Docker") ---
  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    needs: [build-java24]
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t world-population-report:${{ github.sha }} .
